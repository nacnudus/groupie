% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/groups_maps.R
\name{groups_split}
\alias{groups_split}
\title{Split data frame by sets of groups}
\usage{
groups_split(.tbl, .f, ...)
}
\arguments{
\item{.tbl}{A grouped tibble}

\item{.f}{A function or formula to apply to the grouping variables. It must
return a list of character vectors.
\itemize{
\item If a \emph{function}, it is used as is. It should have at least 1 formal
argument.
\item If a \emph{formula}, e.g. ‘~ list(.x)’, it is converted to a function.
}

In the formula, you can use ‘.’ or ‘.x’ to refer to the grouping variables
of the input tibble as a character vector.}

\item{...}{Additional arguments passed on to ‘.f’}
}
\description{
Split data frame by sets of groups
}
\examples{
grouped <- dplyr::group_by(mtcars, cyl, am, gear)

grouped \%>\%
  groups_split(k_combinations, k = 1) \%>\%
  lapply(head, n = 1) # or use purrr::map()

grouped \%>\%
  groups_split(k_combinations, k = 2) \%>\%
  lapply(head, n = 1)

grouped \%>\%
  groups_split(all_combinations) \%>\%
  lapply(head, n = 1)

# A formula that returns a single set of all grouping variables
grouped \%>\%
  groups_split(~ list(.x)) \%>\%
  lapply(head, n = 1)

# A function that returns a single set of all grouping variables
grouped \%>\%
  groups_split(function(x) list(x)) \%>\%
  lapply(head, n = 1)

# A formula that overrides the grouping variables with two new sets
grouped \%>\%
  groups_split(~ list(c("cyl", "am"), c("gear", "carb"))) \%>\%
  lapply(head, n = 1)
}
